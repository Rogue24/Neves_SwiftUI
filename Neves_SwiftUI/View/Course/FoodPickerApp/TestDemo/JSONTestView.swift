//
//  JSONTestView.swift
//  Neves_SwiftUI
//
//  Created by Âë®ÂÅ•Âπ≥ on 2023/9/11.
//

import SwiftUI

struct JSONTestView: View {
    @AppStorage("ppperson") private var person: MyPerson = MyPerson(name: "Zhoujianping", age: 3)
    
    var body: some View {
        Text("Hello, \(person.name)")
            .onTapGesture {
                look()
            }
    }
    
    func look() {
        var person = MyPerson(name: "Zhoujianping_\(Int.random(in: 1...10))",
                              age: Int.random(in: 10..<30))
        
        let rawValue = person.rawValue
        print("jpjpjp person.rawValue - \(rawValue)")
        
        person = MyPerson(rawValue: rawValue)!
        print("jpjpjp person - \(person)")
        
        self.person = person
    }
}

/**
 * üì¢ Ê≥®ÊÑèÔºö
 * ÊÉ≥‰ΩøÁî®`AppStorage`Â≠òÂÇ®Ëá™ÂÆö‰πâÁöÑÁ±ªÂûãÔºåËØ•Á±ªÂûãË¶ÅÈÅµÂÆà`RawRepresentable`‰∏î`RawValue`Ë¶Å‰∏∫`String`ÔºàÊàñ`Int`ÔºâÔºõ
 * ËÄåÊÉ≥ÂÖ∂`rawValue`‰∏∫`String`ÔºåÂ∞±Âæó‰ΩøÁî®`JSONEncoder`ËøõË°åÁºñÁ†ÅÔºàÂíå`JSONDecoder`ËøõË°åËß£Á†ÅÔºâÔºåÂõ†Ê≠§ËøòÂæóÈÅµÂÆà`Codable`Ôºõ
 * Áî±‰∫é`JSONEncoder`ËøõË°åÁºñÁ†ÅÊó∂‰ºöË∞ÉÁî®`RawRepresentable`ÈªòËÆ§ÂÆûÁé∞ÁöÑ`encode`ÊñπÊ≥ïÔºåÈáåÈù¢ËÆøÈóÆ‰∫Ü`rawValue`Ôºå‰ºöÈÄ†Êàê„ÄêÊ≠ªÂæ™ÁéØ„ÄëÔºå
 * ÊâÄ‰ª•Ë¶ÅÈáçÊñ∞ÂÆûÁé∞`Encodable`ÁöÑ`encode`ÊñπÊ≥ïÔºàË¶ÜÁõñÊéâ`RawRepresentable`ÁöÑÈªòËÆ§ÂÆûÁé∞ÔºâÔºåÂπ∂‰∏îÁ°Æ‰øùÈáåÈù¢‰∏ç‰ºöËÆøÈóÆ`rawValue`„ÄÇ
 */

struct MyPerson {
    var name: String
    var age: Int
}

extension MyPerson: Codable {
    enum CodingKeys: String, CodingKey {
        case name, age
    }
    
    init(from decoder: Decoder) throws {
        let c = try decoder.container(keyedBy: CodingKeys.self)
        name = try c.decode(String.self, forKey: .name)
        age = try c.decode(Int.self, forKey: .age)
    }
    
    /// Â¶ÇÊûúÈÅµÂÆà‰∫Ü`RawRepresentable`ÔºåÈÇ£‰πà`rawValue`ÁöÑÈªòËÆ§ÂÆûÁé∞‰ºöË∞ÉÁî®`encode`Ôºå
    /// ÂêåÊó∂`encode`ÁöÑÈªòËÆ§ÂÆûÁé∞Âàô‰ºöË∞ÉÁî®`rawValue`ÔºåÂõ†Ê≠§‰ºöÈÄ†Êàê„ÄêÊ≠ªÂæ™ÁéØ„ÄëÔºÅÔºÅ
    /// ÊâÄ‰ª•Ë¶Å‰∏çÈáçÂÜô`rawValue`ÂÜÖÈÉ®‰∏çÊâßË°å`encode`ÔºåË¶Å‰∏çÈáçÂÜô`encode`ÂÜÖÈÉ®‰∏çÊâßË°å`rawValue`„ÄÇ
    func encode(to encoder: Encoder) throws {
        var c = encoder.container(keyedBy: CodingKeys.self)
        try c.encode(name, forKey: .name)
        try c.encode(age, forKey: .age)
    }
}

extension MyPerson: RawRepresentable {
    var rawValue: String {
        let jsonData = try! JSONEncoder().encode(self)
        return String(data: jsonData, encoding: .utf8)!
    }
    
    init?(rawValue: String) {
        let data = rawValue.data(using: .utf8)!
        self = try! JSONDecoder().decode(Self.self, from: data)
    }
}

struct JSONTestView_Previews: PreviewProvider {
    static var previews: some View {
        JSONTestView()
    }
}
