//
//  Food.swift
//  Neves_SwiftUI
//
//  Created by Âë®ÂÅ•Âπ≥ on 2023/6/13.
//

import Foundation

struct Food: Equatable, Identifiable {
    var id = UUID() // Áî±‰∫éËß£Á†ÅÁöÑÂÜÖÂÆπÂåÖÊã¨idÔºåÊâÄ‰ª•Ë¶ÅÊç¢ÊàêvarÔºå‰ΩøËß£Á†ÅÊó∂ÂèØ‰ª•‰øÆÊîπËøô‰∏™ÂÄº
    var name: String
    var image: String
    @Suffix(" Â§ßÂç°") var calorie: Double = 0
    @Suffix(" g") var carb: Double = 0
    @Suffix(" g") var fat: Double = 0
    @Suffix(" g") var protein: Double = 0
    
    static let examples = [
        Food(name: "Ê±âÂ†°", image: "üçî", calorie: 294, carb: 14, fat: 24, protein: 17),
        Food(name: "Ê≤ôÊãâ", image: "ü•ó", calorie: 89, carb: 20, fat: 0, protein: 1.8),
        Food(name: "Êä´Ëê®", image: "üçï", calorie: 266, carb: 33, fat: 10, protein: 11),
        Food(name: "ÊÑèÂ§ßÂà©Èù¢", image: "üçù", calorie: 339, carb: 74, fat: 1.1, protein: 12),
        Food(name: "È∏°ËÖøÁõíÈ•≠", image: "üçóüç±", calorie: 191, carb: 19, fat: 8.1, protein: 11.7),
        Food(name: "ÂàÄÂâäÈù¢", image: "üçú", calorie: 256, carb: 56, fat: 1, protein: 8),
        Food(name: "ÁÅ´ÈîÖ", image: "üç≤", calorie: 233, carb: 26.5, fat: 17, protein: 22),
        Food(name: "ÁâõËÇâÈù¢", image: "üêÑüçú", calorie: 219, carb: 33, fat: 5, protein: 9),
        Food(name: "ÂÖ≥‰∏úÁÖÆ", image: "ü•ò", calorie: 80, carb: 4, fat: 4, protein: 6),
    ]
    
    static var new: Food { Food(name: "", image: "") }
}

extension Food: Codable {
    /// ÈÅµÂÆà`Codable`ÔºåÂ¶ÇÊûúËá™Â∑±ÁöÑÊâÄÊúâÂ±ûÊÄßÈÉΩÊòØ`Codable`ÁöÑÔºåÈÇ£‰πàÂ∞±‰∏çÁî®Ëá™Â∑±ÂéªÂÆûÁé∞ÁºñÁ†Å`endode`ÂíåËß£Á†Å`decode`„ÄÇ
    /// PS: `Swift`Êèê‰æõÁöÑÂü∫Êú¨Á±ªÂûãÈÉΩÊòØ`Codable`ÁöÑÔºåÂ¶Ç`String`„ÄÅ`Int`ÔºåËøòÊúâ`Array`Âíå`Dictionary`ÔºàÂè™Ë¶ÅÂ≠òÂÇ®ÁöÑÂÖÉÁ¥†‰πüÊòØ`Codable`ÁöÑÂç≥ÂèØÔºâ„ÄÇ
}

/// ‰ΩøÁî®Ê≥õÂûãÂ¢ûÂº∫ÈÄöÁî®ÊÄß ---> `Array+`
//extension [Food]: RawRepresentable {
//    /// Ëß£Á†Å
//    public init?(rawValue: String) {
//        guard let data = rawValue.data(using: .utf8),
//              let foods = try? JSONDecoder().decode([Food].self, from: data)
//        else { return nil }
//        self = foods
//    }
//
//    /// ÁºñÁ†Å
//    public var rawValue: String {
//        guard let data = try? JSONEncoder().encode(self),
//              let str = String(data: data, encoding: .utf8)
//        else { return "" }
//        return str
//    }
//}
